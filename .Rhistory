setwd("~/Documents/CHAPMAN/BUS 696 - R PROGRAM/Project")
options(scipen=999)
options(digits=4)
library(dplyr)
library(gplots)
library(ggplot2)
library(cluster)
library(devtools)
library(easyRFM)
library(data.table)
dat <- read.csv("Superstore.csv")
str(dat)
cust <- dat[,c(1, 6, 2:3, 14:22)]
str(cust)
# convert variables
cust$Customer.ID <- as.character(cust$Customer.ID)
cust$Order.ID <- as.character(cust$Order.ID)
cust$Order.Date <-as.Date(cust$Order.Date, format = "%m/%d/%Y")
cust$Product.ID <- as.character(cust$Product.ID)
cust$Product.Name <- as.character(cust$Product.Name)
cust$Sales <- as.numeric(as.character(gsub(",","",cust$Sales)))
cust$Profit <- as.numeric(as.character(gsub(",","",cust$Profit)))
str(cust)
# delete 668 NA observations
sum(is.na(cust$Sales))
sum(is.na(cust$Profit))
cust = na.omit(cust)
names(cust$Sub.Category)
# using package "dplyr" to manipulate data
# sub.category distribution group by Customer.ID
# Phones
Phones <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Phones = as.numeric(ifelse(Sub.Category == "Phones", 1, 0)), Phones_Num = Phones*Quantity)
Phones <- Phones %>% group_by(Customer.ID) %>% select(Customer.ID, Phones_Num) %>% summarise(Phones_Num = sum(Phones_Num))
# Chairs
Chairs <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Chairs = as.numeric(ifelse(Sub.Category == "Chairs", 1, 0)), Chairs_Num = Chairs*Quantity)
Chairs <- Chairs %>% group_by(Customer.ID) %>% select(Customer.ID, Chairs_Num) %>% summarise(Chairs_Num = sum(Chairs_Num))
# Tables
Tables <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Tables = as.numeric(ifelse(Sub.Category == "Tables", 1, 0)), Tables_Num = Tables*Quantity)
Tables <- Tables %>% group_by(Customer.ID) %>% select(Customer.ID, Tables_Num) %>% summarise(Tables_Num = sum(Tables_Num))
# Copiers
Copiers <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Copiers = as.numeric(ifelse(Sub.Category == "Copiers", 1, 0)), Copiers_Num = Copiers*Quantity)
Copiers <- Copiers %>% group_by(Customer.ID) %>% select(Customer.ID, Copiers_Num) %>% summarise(Copiers_Num = sum(Copiers_Num))
# Bookcases
Bookcases <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Bookcases = as.numeric(ifelse(Sub.Category == "Bookcases", 1, 0)), Bookcases_Num = Bookcases*Quantity)
Bookcases <- Bookcases %>% group_by(Customer.ID) %>% select(Customer.ID, Bookcases_Num) %>% summarise(Bookcases_Num = sum(Bookcases_Num))
# Art
Art <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Art = as.numeric(ifelse(Sub.Category == "Art", 1, 0)), Art_Num = Art*Quantity)
Art <- Art %>% group_by(Customer.ID) %>% select(Customer.ID, Art_Num) %>% summarise(Art_Num = sum(Art_Num))
# Appliances
Appliances <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Appliances = as.numeric(ifelse(Sub.Category == "Appliances", 1, 0)), Appliances_Num = Appliances*Quantity)
Appliances <- Appliances %>% group_by(Customer.ID) %>% select(Customer.ID, Appliances_Num) %>% summarise(Appliances_Num = sum(Appliances_Num))
# Storage
Storage <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Storage = as.numeric(ifelse(Sub.Category == "Storage", 1, 0)), Storage_Num = Storage*Quantity)
Storage <- Storage %>% group_by(Customer.ID) %>% select(Customer.ID, Storage_Num) %>% summarise(Storage_Num = sum(Storage_Num))
# Fasteners
Fasteners <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Fasteners = as.numeric(ifelse(Sub.Category == "Fasteners", 1, 0)), Fasteners_Num = Fasteners*Quantity)
Fasteners <- Fasteners %>% group_by(Customer.ID) %>% select(Customer.ID, Fasteners_Num) %>% summarise(Fasteners_Num = sum(Fasteners_Num))
# Machines
Machines <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Machines = as.numeric(ifelse(Sub.Category == "Machines", 1, 0)), Machines_Num = Machines*Quantity)
Machines <- Machines %>% group_by(Customer.ID) %>% select(Customer.ID, Machines_Num) %>% summarise(Machines_Num = sum(Machines_Num))
# Accessories
Accessories <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Accessories = as.numeric(ifelse(Sub.Category == "Accessories", 1, 0)), Accessories_Num = Accessories*Quantity)
Accessories <- Accessories %>% group_by(Customer.ID) %>% select(Customer.ID, Accessories_Num) %>% summarise(Accessories_Num = sum(Accessories_Num))
# Furnishings
Furnishings <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Furnishings = as.numeric(ifelse(Sub.Category == "Furnishings", 1, 0)), Furnishings_Num = Furnishings*Quantity)
Furnishings <- Furnishings %>% group_by(Customer.ID) %>% select(Customer.ID, Furnishings_Num) %>% summarise(Furnishings_Num = sum(Furnishings_Num))
# Binders
Binders <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Binders = as.numeric(ifelse(Sub.Category == "Binders", 1, 0)), Binders_Num = Binders*Quantity)
Binders <- Binders %>% group_by(Customer.ID) %>% select(Customer.ID, Binders_Num) %>% summarise(Binders_Num = sum(Binders_Num))
# Labels
Labels <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Labels = as.numeric(ifelse(Sub.Category == "Labels", 1, 0)), Labels_Num = Labels*Quantity)
Labels <- Labels %>% group_by(Customer.ID) %>% select(Customer.ID, Labels_Num) %>% summarise(Labels_Num = sum(Labels_Num))
# Supplies
Supplies <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Supplies = as.numeric(ifelse(Sub.Category == "Supplies", 1, 0)), Supplies_Num = Supplies*Quantity)
Supplies <- Supplies %>% group_by(Customer.ID) %>% select(Customer.ID, Supplies_Num) %>% summarise(Supplies_Num = sum(Supplies_Num))
# Envelopes
Envelopes <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Envelopes = as.numeric(ifelse(Sub.Category == "Envelopes", 1, 0)), Envelopes_Num = Envelopes*Quantity)
Envelopes <- Envelopes %>% group_by(Customer.ID) %>% select(Customer.ID, Envelopes_Num) %>% summarise(Envelopes_Num = sum(Envelopes_Num))
# Paper
Paper <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Paper = as.numeric(ifelse(Sub.Category == "Paper", 1, 0)), Paper_Num = Paper*Quantity)
Paper <- Paper %>% group_by(Customer.ID) %>% select(Customer.ID, Paper_Num) %>% summarise(Paper_Num = sum(Paper_Num))
# combine all sub.category
sub.cat <- cbind(Storage, Phones, Machines, Labels, Furnishings, Fasteners, Envelopes, Copiers, Chairs, Bookcases, Binders, Art, Appliances, Accessories, Tables, Supplies, Paper)
sub.cat <- sub.cat[,c(1,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34)]
# create new variables group by Customer.ID, order_num as the number of orders of each customer,
recency <- cust %>% group_by(Customer.ID, Order.Date) %>% select(Customer.ID, Order.Date) %>% summarise(order_num = n())
# create FDP as first day purchase, LDP as last day purchase
rm(Accessories, Appliances, Art, Binders, Bookcases, Chaies, Copiers, Envelopes, Fasteners, Furnishings, Labels, Machines, Paper, Phones, Storage, Supplies, Tables)
rm(Accessories, Appliances, Art, Binders, Bookcases, Charies, Copiers, Envelopes, Fasteners, Furnishings, Labels, Machines, Paper, Phones, Storage, Supplies, Tables)
rm(Accessories, Appliances, Art, Binders, Bookcases, Charis, Copiers, Envelopes, Fasteners, Furnishings, Labels, Machines, Paper, Phones, Storage, Supplies, Tables)
rm(Accessories, Appliances, Art, Binders, Bookcases, Chairs, Copiers, Envelopes, Fasteners, Furnishings, Labels, Machines, Paper, Phones, Storage, Supplies, Tables)
recency <- recency %>% group_by(Customer.ID) %>% mutate(FPD = min(Order.Date), LPD = max(Order.Date))
# measured AsOfDate variable as the last day of purchase
recency$AsOfDate <- max(recency$LPD)
recency$Rec <- as.numeric(recency$AsOfDate - recency$LPD)
recency <- recency[, c(1,3:5,7)]
recency <- recency %>% group_by(Customer.ID) %>% select(Customer.ID, order_num, Rec) %>% summarise(order_num = n(), Rec = mean(Rec))
monetary <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sales, Quantity, Profit) %>% summarise(Sales = sum(Sales), Profit = sum(Profit), Quantity = sum(Quantity))
View(monetary)
monetary <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, monetary, Quantity, Profit) %>% summarise(monetary = sum(Sales), Profit = sum(Profit), Quantity = sum(Quantity))
View(monetary)
monetary <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, monetary, Quantity, Profit) %>% summarise(monetary = sum(Sales), Profit = sum(Profit), Quantity = sum(Quantity))
monetary <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sales, Quantity, Profit) %>% summarise(monetary = sum(Sales), Profit = sum(Profit), Quantity = sum(Quantity))
View(monetary)
View(monetary)
View(recency)
recency <- recency %>% group_by(Customer.ID) %>% select(Customer.ID, order_num, Rec) %>% summarise(order_num = n(), R = mean(Rec))
View(recency)
recency <- recency %>% group_by(Customer.ID) %>% select(Customer.ID, order_num, Rec) %>% summarise(F = n(), R = mean(Rec))
recency <- recency %>% group_by(Customer.ID) %>% select(Customer.ID, order_num, Rec) %>% summarise(F = n(), R = mean(Rec))
recency <- cust %>% group_by(Customer.ID, Order.Date) %>% select(Customer.ID, Order.Date) %>% summarise(order_num = n())
# create FDP as first day purchase, LDP as last day purchase
recency <- recency %>% group_by(Customer.ID) %>% mutate(FPD = min(Order.Date), LPD = max(Order.Date))
# measured AsOfDate variable as the last day of purchase
recency$AsOfDate <- max(recency$LPD)
# calculate the recency, that is the nearest date the customer purchase
recency$Rec <- as.numeric(recency$AsOfDate - recency$LPD)
recency <- recency[, c(1,3:5,7)]
recency <- recency %>% group_by(Customer.ID) %>% select(Customer.ID, order_num, Rec) %>% summarise(F = n(), R = mean(Rec))
View(recency)
recency <- recency %>% group_by(Customer.ID) %>% mutate(FPD = min(Order.Date), LPD = max(Order.Date))
# measured AsOfDate variable as the last day of purchase
recency$AsOfDate <- max(recency$LPD)
# calculate the recency, that is the nearest date the customer purchase
recency$Rec <- as.numeric((recency$AsOfDate - recency$LPD)/30)
recency <- recency[, c(1,3:5,7)]
recency <- recency %>% group_by(Customer.ID) %>% select(Customer.ID, order_num, Rec) %>% summarise(F = n(), R = mean(Rec))
#####
recency <- cust %>% group_by(Customer.ID, Order.Date) %>% select(Customer.ID, Order.Date) %>% summarise(order_num = n())
# create FDP as first day purchase, LDP as last day purchase
recency <- recency %>% group_by(Customer.ID) %>% mutate(FPD = min(Order.Date), LPD = max(Order.Date))
recency$AsOfDate <- max(recency$LPD)
recency$Rec <- as.numeric((recency$AsOfDate - recency$LPD)/30)
recency <- recency[, c(1,3:5,7)]
recency <- recency %>% group_by(Customer.ID) %>% select(Customer.ID, order_num, Rec) %>% summarise(F = n(), R = mean(Rec))
View(recency)
recency$Rec <- as.numeric(round((recency$AsOfDate - recency$LPD)/30), digits = 0)
recency <- recency %>% group_by(Customer.ID) %>% mutate(FPD = min(Order.Date), LPD = max(Order.Date))
# measured AsOfDate variable as the last day of purchase
recency$AsOfDate <- max(recency$LPD)
# calculate the recency, that is the nearest date the customer purchase
recency$Rec <- as.numeric(round((recency$AsOfDate - recency$LPD)/30), digits = 0)
recency <- recency[, c(1,3:5,7)]
recency <- recency %>% group_by(Customer.ID) %>% select(Customer.ID, order_num, Rec) %>% summarise(F = n(), R = mean(Rec))
#####
recency <- cust %>% group_by(Customer.ID, Order.Date) %>% select(Customer.ID, Order.Date) %>% summarise(order_num = n())
# create FDP as first day purchase, LDP as last day purchase
recency <- recency %>% group_by(Customer.ID) %>% mutate(FPD = min(Order.Date), LPD = max(Order.Date))
# measured AsOfDate variable as the last day of purchase
recency$AsOfDate <- max(recency$LPD)
# calculate the recency, that is the nearest date the customer purchase
recency$Rec <- as.numeric(round((recency$AsOfDate - recency$LPD)/30), digits = 0)
recency <- recency[, c(1,3:5,7)]
recency <- recency %>% group_by(Customer.ID) %>% select(Customer.ID, order_num, Rec) %>% summarise(F = n(), R = mean(Rec))
#####
View(monetary)
monetary <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sales, Quantity, Profit) %>% summarise(M = sum(Sales), Profit = sum(Profit), Quantity = sum(Quantity))
View(monetary)
data <- cbind(recency, monetary)
data <- data[, -4]
RFM <- cbind(recency, monetary)
View(data)
rm(data)
View(RFM)
data <- data[, -c(4,6,7)]
data <- data[, -4,6,7]
data <- data[, c(1:3,5)]
data <- RFM[, c(1:3,5)]
rm(data)
View(RFM)
RFM <- RFM[, c(1:3,5)]
View(RFM)
hist(RFM$F)
hist(RFM$R)
hist(RFM$M)
getIndependentScore <- function(RFM, R = 5, F = 5, M = 5)
View(RFM)
View(recency)
View(monetary)
?scoring
scoring?
r <- 5
R_score <- scoring(RFM, "R", r)
?scoring
??scoring
getIndependentScore <- function(RFM, r = 5, f = 5, m = 5) {
if(r <= 0 || f <= 0 || m<=0) return
RFM <- RFM[order(RFM$R, -RFM$F, -RFM$M),]
R_score <- scoring(RFM, "R", r)
df <- cbind(RFM,
}
getIndependentScore <- function(RFM, r = 5, f = 5, m = 5) {
if(r <= 0 || f <= 0 || m<=0) return
RFM <- RFM[order(RFM$R, -RFM$F, -RFM$M),]
R_score <- scoring(RFM, "R", r)
df <- cbind(RFM, R_score)
}
View(RFM)
getIndependentScore <- function(RFM, r = 5, f = 5, m = 5) {
if(r <= 0 || f <= 0 || m<=0) return
RFM <- RFM[order(RFM$R, -RFM$F, -RFM$M),]
R_score <- scoring(RFM, "R", r)
df <- cbind(RFM, R_score)
return(RFM)
}
View(RFM)
View(monetary)
?getIndependentScore
getIndependentScore <- function(RFM, r = 5, f = 5, m = 5) {
if(r <= 0 || f <= 0 || m<=0) return
RFM <- RFM[order(RFM$R, -RFM$F, -RFM$M),]
R_score <- scoring(RFM, "R", r)
df <- cbind(RFM, R_score)
RFM <- RFM[order(-RFM$R, RFM$F, -RFM$M),]
F_score <- scoring(RFM, "F", f)
df <- cbind(RFM, F_score)
RFM <- RFM[order(-RFM$R, -RFM$F, RFM$M),]
M_score <- scoring(RFM, "M", m)
df <- cbind(RFM, M_score)
return(RFM)
}
View(RFM)
View(cust)
source('~/Desktop/Cust Segment.R', echo=TRUE)
cust$Order.Date <-as.Date(cust$Order.Date, format = "%m/%d/%Y")
View(dat)
cust$Order.Date <-as.Date(cust$Order.Date, format = "%m/%d/%y")
dat <- read.csv("Superstore.csv")
str(dat)
cust <- dat[,c(1, 6, 2:3, 14:22)]
str(cust)
cust$Customer.ID <- as.character(cust$Customer.ID)
cust$Order.ID <- as.character(cust$Order.ID)
cust$Order.Date <-as.Date(cust$Order.Date, format = "%m/%d/%y")
cust$Product.ID <- as.character(cust$Product.ID)
cust$Product.Name <- as.character(cust$Product.Name)
cust$Sales <- as.numeric(as.character(gsub(",","",cust$Sales)))
cust$Profit <- as.numeric(as.character(gsub(",","",cust$Profit)))
str(cust)
View(cust)
sum(is.na(cust$Sales))
sum(is.na(cust$Profit))
cust = na.omit(cust)
names(cust$Sub.Category)
# using package "dplyr" to manipulate data
# sub.category distribution group by Customer.ID
# Phones
Phones <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Phones = as.numeric(ifelse(Sub.Category == "Phones", 1, 0)), Phones_Num = Phones*Quantity)
Phones <- Phones %>% group_by(Customer.ID) %>% select(Customer.ID, Phones_Num) %>% summarise(Phones_Num = sum(Phones_Num))
# Chairs
Chairs <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Chairs = as.numeric(ifelse(Sub.Category == "Chairs", 1, 0)), Chairs_Num = Chairs*Quantity)
Chairs <- Chairs %>% group_by(Customer.ID) %>% select(Customer.ID, Chairs_Num) %>% summarise(Chairs_Num = sum(Chairs_Num))
# Tables
Tables <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Tables = as.numeric(ifelse(Sub.Category == "Tables", 1, 0)), Tables_Num = Tables*Quantity)
Tables <- Tables %>% group_by(Customer.ID) %>% select(Customer.ID, Tables_Num) %>% summarise(Tables_Num = sum(Tables_Num))
# Copiers
Copiers <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Copiers = as.numeric(ifelse(Sub.Category == "Copiers", 1, 0)), Copiers_Num = Copiers*Quantity)
Copiers <- Copiers %>% group_by(Customer.ID) %>% select(Customer.ID, Copiers_Num) %>% summarise(Copiers_Num = sum(Copiers_Num))
# Bookcases
Bookcases <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Bookcases = as.numeric(ifelse(Sub.Category == "Bookcases", 1, 0)), Bookcases_Num = Bookcases*Quantity)
Bookcases <- Bookcases %>% group_by(Customer.ID) %>% select(Customer.ID, Bookcases_Num) %>% summarise(Bookcases_Num = sum(Bookcases_Num))
# Art
Art <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Art = as.numeric(ifelse(Sub.Category == "Art", 1, 0)), Art_Num = Art*Quantity)
Art <- Art %>% group_by(Customer.ID) %>% select(Customer.ID, Art_Num) %>% summarise(Art_Num = sum(Art_Num))
# Appliances
Appliances <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Appliances = as.numeric(ifelse(Sub.Category == "Appliances", 1, 0)), Appliances_Num = Appliances*Quantity)
Appliances <- Appliances %>% group_by(Customer.ID) %>% select(Customer.ID, Appliances_Num) %>% summarise(Appliances_Num = sum(Appliances_Num))
# Storage
Storage <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Storage = as.numeric(ifelse(Sub.Category == "Storage", 1, 0)), Storage_Num = Storage*Quantity)
Storage <- Storage %>% group_by(Customer.ID) %>% select(Customer.ID, Storage_Num) %>% summarise(Storage_Num = sum(Storage_Num))
# Fasteners
Fasteners <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Fasteners = as.numeric(ifelse(Sub.Category == "Fasteners", 1, 0)), Fasteners_Num = Fasteners*Quantity)
Fasteners <- Fasteners %>% group_by(Customer.ID) %>% select(Customer.ID, Fasteners_Num) %>% summarise(Fasteners_Num = sum(Fasteners_Num))
# Machines
Machines <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Machines = as.numeric(ifelse(Sub.Category == "Machines", 1, 0)), Machines_Num = Machines*Quantity)
Machines <- Machines %>% group_by(Customer.ID) %>% select(Customer.ID, Machines_Num) %>% summarise(Machines_Num = sum(Machines_Num))
# Accessories
Accessories <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Accessories = as.numeric(ifelse(Sub.Category == "Accessories", 1, 0)), Accessories_Num = Accessories*Quantity)
Accessories <- Accessories %>% group_by(Customer.ID) %>% select(Customer.ID, Accessories_Num) %>% summarise(Accessories_Num = sum(Accessories_Num))
# Furnishings
Furnishings <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Furnishings = as.numeric(ifelse(Sub.Category == "Furnishings", 1, 0)), Furnishings_Num = Furnishings*Quantity)
Furnishings <- Furnishings %>% group_by(Customer.ID) %>% select(Customer.ID, Furnishings_Num) %>% summarise(Furnishings_Num = sum(Furnishings_Num))
# Binders
Binders <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Binders = as.numeric(ifelse(Sub.Category == "Binders", 1, 0)), Binders_Num = Binders*Quantity)
Binders <- Binders %>% group_by(Customer.ID) %>% select(Customer.ID, Binders_Num) %>% summarise(Binders_Num = sum(Binders_Num))
# Labels
Labels <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Labels = as.numeric(ifelse(Sub.Category == "Labels", 1, 0)), Labels_Num = Labels*Quantity)
Labels <- Labels %>% group_by(Customer.ID) %>% select(Customer.ID, Labels_Num) %>% summarise(Labels_Num = sum(Labels_Num))
# Supplies
Supplies <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Supplies = as.numeric(ifelse(Sub.Category == "Supplies", 1, 0)), Supplies_Num = Supplies*Quantity)
Supplies <- Supplies %>% group_by(Customer.ID) %>% select(Customer.ID, Supplies_Num) %>% summarise(Supplies_Num = sum(Supplies_Num))
# Envelopes
Envelopes <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Envelopes = as.numeric(ifelse(Sub.Category == "Envelopes", 1, 0)), Envelopes_Num = Envelopes*Quantity)
Envelopes <- Envelopes %>% group_by(Customer.ID) %>% select(Customer.ID, Envelopes_Num) %>% summarise(Envelopes_Num = sum(Envelopes_Num))
# Paper
Paper <- cust %>% group_by(Customer.ID) %>% select(Customer.ID, Sub.Category, Quantity) %>% mutate(Paper = as.numeric(ifelse(Sub.Category == "Paper", 1, 0)), Paper_Num = Paper*Quantity)
Paper <- Paper %>% group_by(Customer.ID) %>% select(Customer.ID, Paper_Num) %>% summarise(Paper_Num = sum(Paper_Num))
# combine all sub.category
sub.cat <- cbind(Storage, Phones, Machines, Labels, Furnishings, Fasteners, Envelopes, Copiers, Chairs, Bookcases, Binders, Art, Appliances, Accessories, Tables, Supplies, Paper)
sub.cat <- sub.cat[,c(1,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34)]
rm(Accessories, Appliances, Art, Binders, Bookcases, Chairs, Copiers, Envelopes, Fasteners, Furnishings, Labels, Machines, Paper, Phones, Storage, Supplies, Tables)
View(cust)
rfm.test <- rfm_auto(cust, id="Customer.ID", payment="Sales", date="Order.Date")
head(rfm.test$rfm)
rfm.test$breaks
rfm.test$get_table("RF")
rfm.test$get_table("RM")
RFM <- rfm_auto(cust, id="Customer.ID", payment="Sales", date="Order.Date")
head(rfm.test$rfm)
rfm.test$breaks
rm(monetary, recency, rfm.test, r, getIndependentScore)
leaved_customers <- rfm.test$get_sliced_rfm(R_slice=1:2)
leaved_customers <- RFM$get_sliced_rfm(R_slice=1:2)
leaving_customers <- RFM$get_sliced_rfm(R_slice=3)
good_customers <- RFM$get_sliced_rfm(R_slice=4:5, F_slice=4:5)
new_customers <- RFM$get_sliced_rfm(R_slice=4:5, F_slice=1:2)
View(good_customers)
rfm.score <- RFM$rfm
View(rfm.score)
str(rfm.score)
rfm.score$score <- rfm.score$RecencyClass+rfm.score$FrequencyClass+rfm.score$MonetaryClass
rfm.score$RecencyClass <- as.factor(rfm.score$RecencyClass)
rfm.score$FrequencyClass <- as.factor(rfm.score$FrequencyClass)
View(rfm.score)
table(rfm.score$score)
str(rfm.score)
balloonplot(rfm.score$RecencyClass, rfm.score$FrequencyClass, rfm.score$MonetaryClass)
View(rfm.score)
View(sub.cat)
good <- filter(sub.cat, Customer.ID == good_customers$Customer.ID)
View(good)
good <- sub.cat[sub.cat$Customer.ID %in% good_customers$Customer.ID]
good <- sub.cat[sub.cat$Customer.ID %in% good_customers$Customer.ID]
sub.cat$Cs.Type[sub.cat$Customer.ID %in% good_customers$Customer.ID] = 1
View(sub.cat)
sub.cat$Cs.Type[sub.cat$Customer.ID %in% leaved_customers$Customer.ID] = 0
sub.cat$Cs.Type[sub.cat$Customer.ID %in% leaving_customers$Customer.ID] = 1
sub.cat$Cs.Type[sub.cat$Customer.ID %in% new_customers$Customer.ID] = 3
sub.cat$Cs.Type <- 4
sub.cat$Cs.Type[sub.cat$Customer.ID %in% good_customers$Customer.ID] = 2
sub.cat$Cs.Type[sub.cat$Customer.ID %in% leaved_customers$Customer.ID] = 0
sub.cat$Cs.Type[sub.cat$Customer.ID %in% leaving_customers$Customer.ID] = 1
sub.cat$Cs.Type[sub.cat$Customer.ID %in% new_customers$Customer.ID] = 3
good.clust <- sub.cat[sub.cat$Cs.Type = 2,]
good.clust <- sub.cat[sub.cat$Cs.Type == 2,]
leaved.clust <- sub.cat[sub.cat$Cs.Type == 0,]
leaving.clust <- sub.cat[sub.cat$Cs.Type == 1,]
new.clust <- sub.cat[sub.cat$Cs.Type == 3,]
View(good.clust)
good.clust <- good.cust[,-19]
good.clust <- good.clust[,-19]
mydata <- good.clust
wss <- (nrow(mydata) - 1)*sum(apply(mydata,2,var))
for ( i in 2:15) wss[i] <- sum(kmeans(mydata, centers = i)$withinss)
mydata <- good.clust
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata <- good.clust
good.clust <- sub.cat[sub.cat$Cs.Type == 2,]
good.clust <- good.clust[,-19]
mydata <- good.clust
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
summary(good.clust)
str(good.clust)
good.clust <- good.clust[,-c(1,19)]
mydata <- good.clust
View(mydata)
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
good.clust <- good.clust[,-c(1,19)]
# finding number of clusters
wss <- (nrow(good.clust)-1)*sum(apply(good.clust,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(good.clust, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
set.seed1
setseed.1
set.seed(1)
# good customer group
good.clust <- good.clust[,-c(1,19)]
# finding number of clusters
wss <- (nrow(good.clust)-1)*sum(apply(good.clust,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(good.clust, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
k1 <- kmeans(good.clust, 8)
k$size
k1$size
k1$centers
k1 <- kmeans(good.clust, 4)
k1$size
k1$centers
library(cluster)
library(fpc)
plotcluster(good.clust, k1$cluster)
leaved.clust <- leaved.clust[,-c(1,19)]
# finding number of clusters
wss <- (nrow(leaved.clust)-1)*sum(apply(leaved.clust,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(leaved.clust, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
k2 <- kmeans(leaved.clust, 7)
k2$size
k2$centers
plotcluster(leaved.clust, k2$cluster)
leaving.clust <- leaving.clust[,-c(1,19)]
wss <- (nrow(leaving.clust)-1)*sum(apply(leaving.clust,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(leaving.clust, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
k3 <- kmeans(leaving.clust, 6)
k3$size
k3$centers
plotcluster(leaving.clust, k3$cluster)
new.clust <- new.clust[,-c(1,19)]
wss <- (nrow(new.clust)-1)*sum(apply(new.clust,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(new.clust, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
plotcluster(new.clust, k4$cluster)
k4 <- kmeans(new.clust, 10)
k4$size
k4$centers
# plot good customers cluster
plotcluster(new.clust, k4$cluster)
